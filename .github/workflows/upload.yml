# Copyright (c) FAForever
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: Upload and release

on:
  workflow_dispatch:
    inputs:
      modName:
        description: "modName"
        required: true
        default: "fafdevelop"
        type: choice
        options:
          - fafdevelop
          - fafbeta

jobs:
  build:
    name: Patch the binary
    uses: ./.github/workflows/build.yml
  release:
    needs: build
    environment: deploy
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      # Retrieve the patched binary
      - name: Download artifact of patched binary
        uses: actions/download-artifact@v4
        with:
          name: "ForgedAlliance_${{ github.sha }}"
          path: .

      # Upload the patched binary to the FAForever server
      - name: Upload to server
        run: curl -f -X "POST"
          "https://api.faforever.com/exe/upload" -F "modName=${{ github.event.inputs.modName }}" -F "apiKey=${{ secrets.apiKey }}"
          -F "file=@ForgedAlliance_exxt.exe"

      # Upon succesful upload, create a release in the repository
      - name: Create a Release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commit: ${{ github.sha }}
          tag: ${{ github.event.inputs.modName }}_${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
